{"version":3,"sources":["utils/setAuthToken.js","actions/types.js","actions/authActions.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/index.js","store.js","components/layout/Navbar.js","components/layout/Landing.js","components/auth/Register.js","components/auth/Login.js","components/private-route/PrivateRoute.js","components/dashboard/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","GET_ERRORS","USER_LOADING","SET_CURRENT_USER","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","isEmpty","require","initialState","isAuthenticated","user","loading","combineReducers","auth","state","action","errors","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","Navbar","className","to","style","fontFamily","Component","Landing","height","width","borderRadius","letterSpacing","Register","onChange","e","setState","target","id","value","onSubmit","preventDefault","newUser","Username","name","Email","email","Password","password","PasswordConfirmation","password2","props","registerUser","history","this","push","nextProps","console","log","status","paddingLeft","noValidate","error","classnames","invalid","htmlFor","marginTop","connect","userData","post","then","res","catch","err","response","data","withRouter","Login","loginUser","accountType","emailnotfound","passwordincorrect","setItem","jwt_decode","component","rest","render","Dashboard","onLogoutClick","split","onClick","jwtToken","currentTime","Date","now","exp","location","href","App","exact","path","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b02f1ef0.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst setAuthToken = token => {\n  if (token) {\n    // Apply authorization token to every request if logged in\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    // Delete auth header\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setAuthToken;\n","export const GET_ERRORS = \"GET_ERRORS\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";","import axios from 'axios';\nimport setAuthToken from '../utils/setAuthToken';\nimport jwt_decode from 'jwt-decode';\n\nimport { GET_ERRORS, SET_CURRENT_USER, USER_LOADING } from './types';\n\n// Register User\nexport const registerUser = (userData, history) => (dispatch) => {\n\taxios\n\t\t.post('http://localhost:5000/api/Account/register', userData)\n\t\t.then((res) => history.push('/login'))\n\t\t.catch((err) =>\n\t\t\tdispatch({\n\t\t\t\ttype: GET_ERRORS,\n\t\t\t\tpayload: err.response.data,\n\t\t\t}),\n\t\t);\n};\n\n// Login - get user token\nexport const loginUser = (userData) => (dispatch) => {\n\taxios\n\t\t.post('http://localhost:5000/api/Account/login', userData)\n\t\t.then((res) => {\n\t\t\t// Save to localStorage\n\n\t\t\t// Set token to localStorage\n\t\t\tconst { token } = res.data;\n\t\t\tlocalStorage.setItem('jwtToken', token);\n\t\t\t// Set token to Auth header\n\t\t\tsetAuthToken(token);\n\t\t\t// Decode token to get user data\n\t\t\tconst decoded = jwt_decode(token);\n\t\t\t// Set current user\n\t\t\t// Auth user becomes jwt token that was created on backend!!\n\t\t\tdispatch(setCurrentUser(decoded));\n\t\t})\n\t\t.catch((err) =>\n\t\t\tdispatch({\n\t\t\t\ttype: GET_ERRORS,\n\t\t\t\tpayload: err.response.data,\n\t\t\t}),\n\t\t);\n};\n\n// Set logged in user\nexport const setCurrentUser = (decoded) => {\n\treturn {\n\t\ttype: SET_CURRENT_USER,\n\t\tpayload: decoded,\n\t};\n};\n\n// User loading\nexport const setUserLoading = () => {\n\treturn {\n\t\ttype: USER_LOADING,\n\t};\n};\n\n// Log user out\nexport const logoutUser = () => (dispatch) => {\n\t// Remove token from local storage\n\tlocalStorage.removeItem('jwtToken');\n\t// Remove auth header for future requests\n\tsetAuthToken(false);\n\t// Set current user to empty object {} which will set isAuthenticated to false\n\tdispatch(setCurrentUser({}));\n};\n","import { SET_CURRENT_USER, USER_LOADING } from \"../actions/types\";\nconst isEmpty = require(\"is-empty\");\n\nconst initialState = {\n  isAuthenticated: false,\n  user: {},\n  loading: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        isAuthenticated: !isEmpty(action.payload),\n        user: action.payload\n      };\n    case USER_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    default:\n      return state;\n  }\n}\n","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducer\";\nimport errorReducer from \"./errorReducer\";\n\nexport default combineReducers({\n  auth: authReducer,\n  errors: errorReducer\n});","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n      window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__()) ||\n      compose\n  )\n);\n\nexport default store;","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Navbar extends Component {\n  render() {\n    return (\n      <div className=\"navbar-fixed\">\n        <nav className=\"z-depth-0\">\n          <div className=\"nav-wrapper white\">\n            <Link\n              to=\"/\"\n              style={{\n                fontFamily: \"monospace\"\n              }}\n              className=\"col s5 brand-logo center black-text\"\n            >\n    \n            \n              <i className=\"material-icons\">code</i>\n              Barns Link\n            </Link>\n            \n          </div>\n        </nav>\n      </div>\n    );\n  }\n}\n\nexport default Navbar;","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Landing extends Component {\n  render() {\n    return (\n      <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\n        <div className=\"row\">\n          <div className=\"col s12 center-align\">\n            <h4>\n              <b>Automate your restaurant business with us </b>\n              \n            </h4>\n            <p className=\"flow-text grey-text text-darken-1\">\n              A full-stack app created by the Fabulous Five from NYIT\n              \n            </p>\n            <br />\n            <div className=\"col s6\">\n              <Link\n                to=\"/register\"\n                style={{\n                  width: \"140px\",\n                  borderRadius: \"3px\",\n                  letterSpacing: \"1.5px\"\n                }}\n                className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n              >\n                Register\n              </Link>\n            </div>\n            <div className=\"col s6\">\n              <Link\n                to=\"/login\"\n                style={{\n                  width: \"140px\",\n                  borderRadius: \"3px\",\n                  letterSpacing: \"1.5px\"\n                }}\n                className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n              >\n                Log In\n              </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Landing;","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { registerUser } from '../../actions/authActions';\nimport classnames from 'classnames';\n\nclass Register extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tname: '',\n\t\t\temail: '',\n\t\t\tpassword: '',\n\t\t\tpassword2: '',\n\t\t\terrors: {},\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\t// If logged in and user navigates to Register page, should redirect them to dashboard\n\t\tif (this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/dashboard');\n\t\t}\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif (nextProps.errors) {\n\t\t\tthis.setState({\n\t\t\t\terrors: nextProps.errors,\n\t\t\t});\n\t\t}\n\t}\n\n\tonChange = (e) => {\n\t\tthis.setState({ [e.target.id]: e.target.value });\n\t};\n\n\tonSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\tconst newUser = {\n\t\t\tUsername: this.state.name,\n\t\t\tEmail: this.state.email,\n\t\t\tPassword: this.state.password,\n\t\t\tPasswordConfirmation: this.state.password2,\n\t\t};\n\n\t\tthis.props.registerUser(newUser, this.props.history);\n\t};\n\n\trender() {\n\t\tconst { errors } = this.state;\n\t\tconsole.log(this.state.errors.status);\n\t\treturn (\n\t\t\t<div className='container'>\n\t\t\t\t<div className='row'>\n\t\t\t\t\t<div className='col s8 offset-s2'>\n\t\t\t\t\t\t<Link to='/' className='btn-flat waves-effect'>\n\t\t\t\t\t\t\t<i className='material-icons left'>keyboard_backspace</i> Back to home\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t<div className='col s12' style={{ paddingLeft: '11.250px' }}>\n\t\t\t\t\t\t\t<h4>\n\t\t\t\t\t\t\t\t<b>Register</b> below\n\t\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t\t<p className='grey-text text-darken-1'>\n\t\t\t\t\t\t\t\tAlready have an account? <Link to='/login'>Log in</Link>\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<form noValidate onSubmit={this.onSubmit}>\n\t\t\t\t\t\t\t<p className='red-text col s12'>  {this.state.errors.status}</p>\n\t\t\t\t\t\t\t<div className='input-field col s12'>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tonChange={this.onChange}\n\t\t\t\t\t\t\t\t\tvalue={this.state.name}\n\t\t\t\t\t\t\t\t\terror={errors.name}\n\t\t\t\t\t\t\t\t\tid='name'\n\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\tclassName={classnames('', {\n\t\t\t\t\t\t\t\t\t\tinvalid: errors.name,\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<label htmlFor='name'>Name</label>\n\t\t\t\t\t\t\t\t<span className='red-text'>{errors.name}</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='input-field col s12'>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tonChange={this.onChange}\n\t\t\t\t\t\t\t\t\tvalue={this.state.email}\n\t\t\t\t\t\t\t\t\terror={errors.email}\n\t\t\t\t\t\t\t\t\tid='email'\n\t\t\t\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\t\t\t\tclassName={classnames('', {\n\t\t\t\t\t\t\t\t\t\tinvalid: errors.email,\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<label htmlFor='email'>Email</label>\n\t\t\t\t\t\t\t\t<span className='red-text'>{errors.email}</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='input-field col s12'>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tonChange={this.onChange}\n\t\t\t\t\t\t\t\t\tvalue={this.state.password}\n\t\t\t\t\t\t\t\t\terror={errors.password}\n\t\t\t\t\t\t\t\t\tid='password'\n\t\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\t\tclassName={classnames('', {\n\t\t\t\t\t\t\t\t\t\tinvalid: errors.password,\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<label htmlFor='password'>Password</label>\n\t\t\t\t\t\t\t\t<span className='red-text'>{errors.password}</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div className='input-field col s12'>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tonChange={this.onChange}\n\t\t\t\t\t\t\t\t\tvalue={this.state.password2}\n\t\t\t\t\t\t\t\t\terror={errors.password2}\n\t\t\t\t\t\t\t\t\tid='password2'\n\t\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\t\tclassName={classnames('', {\n\t\t\t\t\t\t\t\t\t\tinvalid: errors.password2,\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<label htmlFor='password2'>Confirm Password</label>\n\t\t\t\t\t\t\t\t<span className='red-text'>{errors.password2}</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div className='col s12' style={{ paddingLeft: '11.250px' }}>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\twidth: '150px',\n\t\t\t\t\t\t\t\t\t\tborderRadius: '3px',\n\t\t\t\t\t\t\t\t\t\tletterSpacing: '1.5px',\n\t\t\t\t\t\t\t\t\t\tmarginTop: '1rem',\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\t\t\tclassName='btn btn-large waves-effect waves-light hoverable blue accent-3'>\n\t\t\t\t\t\t\t\t\tSign up\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nRegister.propTypes = {\n\tregisterUser: PropTypes.func.isRequired,\n\tauth: PropTypes.object.isRequired,\n\terrors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n\tauth: state.auth,\n\terrors: state.errors,\n});\n\nexport default connect(mapStateToProps, { registerUser })(withRouter(Register));\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n\n\nclass Login extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\temail: '',\n\t\t\tpassword: '',\n\t\t\terrors: {},\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\t// If logged in and user navigates to Login page, should redirect them to dashboard\n\t\tconsole.log(this.props.auth);\n\t\tif (this.props.auth.isAuthenticated) {\n\t\t\tconsole.log(this.props.auth.user);\n\t\t\tif (this.props.auth.user.accountType == 'Manager') {\n\t\t\t\tconsole.log('Role type is manager');\n\t\t\t} else {\n\t\t\t\tconsole.log('not a manager!');\n\t\t\t}\n\t\t\tthis.props.history.push('/dashboard');\n\t\t}\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif (nextProps.auth.isAuthenticated) {\n\t\t\tconsole.log(this.props.auth.user);\n\t\t\tif (this.props.auth.user.accountType == 'Manager') {\n\t\t\t\tconsole.log('Role type is manager');\n\t\t\t} else {\n\t\t\t\tconsole.log('not a manager!');\n\t\t\t}\n\t\t\tthis.props.history.push('/dashboard');\n\t\t}\n\n\t\tif (nextProps.errors) {\n\t\t\tthis.setState({\n\t\t\t\terrors: nextProps.errors,\n\t\t\t});\n\t\t}\n\t}\n\n\tonChange = (e) => {\n\t\tthis.setState({ [e.target.id]: e.target.value });\n\t};\n\n\tonSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\tconst userData = {\n      Username: this.state.name,\n\t\t\tEmail: this.state.email,\n\t\t\tPassword: this.state.password,\n\t\t};\n\n\t\tthis.props.loginUser(userData);\n\t};\n\n\trender() {\n\t\tconst { errors } = this.state;\n\n\t\tconsole.log(this.state.errors.status);\n\n\t\treturn (\n\t\t\t<div className='container'>\n\t\t\t\t<div style={{ marginTop: '4rem' }} className='row'>\n\t\t\t\t\t<div className='col s8 offset-s2'>\n\t\t\t\t\t\t<Link to='/' className='btn-flat waves-effect'>\n\t\t\t\t\t\t\t<i className='material-icons left'>keyboard_backspace</i> Back to home\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t<div className='col s12' style={{ paddingLeft: '11.250px' }}>\n\t\t\t\t\t\t\t<h4>\n\t\t\t\t\t\t\t\t<b>Login</b> below\n\t\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t\t<p className='grey-text text-darken-1'>\n\t\t\t\t\t\t\t\tDon't have an account? <Link to='/register'>Register</Link>\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<form noValidate onSubmit={this.onSubmit}>\n\t\t\t\t\t\t<p className='red-text text-darken-1 col s12'> {this.state.errors.status}</p>\n\t\t\t\t\t\t\t<div className='input-field col s12'>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tonChange={this.onChange}\n\t\t\t\t\t\t\t\t\tvalue={this.state.email}\n\t\t\t\t\t\t\t\t\terror={errors.email}\n\t\t\t\t\t\t\t\t\tid='email'\n\t\t\t\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\t\t\t\tclassName={classnames('', {\n\t\t\t\t\t\t\t\t\t\tinvalid: errors.email || errors.emailnotfound,\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<span className='red-text'>\n\t\t\t\t\t\t\t\t\t{errors.email}\n\t\t\t\t\t\t\t\t\t{errors.emailnotfound}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='input-field col s12'>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tonChange={this.onChange}\n\t\t\t\t\t\t\t\t\tvalue={this.state.password}\n\t\t\t\t\t\t\t\t\terror={errors.password}\n\t\t\t\t\t\t\t\t\tid='password'\n\t\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\t\tclassName={classnames('', {\n\t\t\t\t\t\t\t\t\t\tinvalid: errors.password || errors.passwordincorrect,\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<label htmlFor='password'>Password</label>\n\t\t\t\t\t\t\t\t<span className='red-text'>\n\t\t\t\t\t\t\t\t\t{errors.password}\n\t\t\t\t\t\t\t\t\t{errors.passwordincorrect}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='col s12' style={{ paddingLeft: '11.250px' }}>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\twidth: '150px',\n\t\t\t\t\t\t\t\t\t\tborderRadius: '3px',\n\t\t\t\t\t\t\t\t\t\tletterSpacing: '1.5px',\n\t\t\t\t\t\t\t\t\t\tmarginTop: '1rem',\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\t\t\tclassName='btn btn-large waves-effect waves-light hoverable blue accent-3'>\n\t\t\t\t\t\t\t\t\tLogin\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nLogin.propTypes = {\n\tloginUser: PropTypes.func.isRequired,\n\tauth: PropTypes.object.isRequired,\n\terrors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n\tauth: state.auth,\n\terrors: state.errors,\n});\n\nexport default connect(mapStateToProps, { loginUser })(Login);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      auth.isAuthenticated === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { logoutUser } from '../../actions/authActions';\n\nclass Dashboard extends Component {\n\tonLogoutClick = (e) => {\n\t\te.preventDefault();\n\t\tthis.props.logoutUser();\n\t};\n\n\trender() {\n\t\tconst { user } = this.props.auth;\n\n\t\tconsole.log(user);\n\n\t\treturn (\n\t\t\t<div style={{ height: '75vh' }} className='container valign-wrapper'>\n\t\t\t\t<div className='row'>\n\t\t\t\t\t<div className='landing-copy col s12 center-align'>\n\t\t\t\t\t\t<h4>\n\t\t\t\t\t\t\t<b>Hey there,</b> {user.name.split(' ')[0]}\n\t\t\t\t\t\t\t<p className='flow-text grey-text text-darken-1'>\n\t\t\t\t\t\t\t\tRestaurant Automation Management Hub{' '}\n\t\t\t\t\t\t\t\t<span style={{ fontFamily: 'monospace' }}>Barns</span> Link 👏\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\twidth: '150px',\n\t\t\t\t\t\t\t\tborderRadius: '3px',\n\t\t\t\t\t\t\t\tletterSpacing: '1.5px',\n\t\t\t\t\t\t\t\tmarginTop: '1rem',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonClick={this.onLogoutClick}\n\t\t\t\t\t\t\tclassName='btn btn-large waves-effect waves-light hoverable blue accent-3'>\n\t\t\t\t\t\t\tLogout\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nDashboard.propTypes = {\n\tlogoutUser: PropTypes.func.isRequired,\n\tauth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n\tauth: state.auth,\n});\n\nexport default connect(mapStateToProps, { logoutUser })(Dashboard);\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport Navbar from \"./components/layout/Navbar\";\nimport Landing from \"./components/layout/Landing\";\nimport Register from \"./components/auth/Register\";\nimport Login from \"./components/auth/Login\";\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\n\nimport \"./App.css\";\n\n// Check for token to keep user logged in\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token);\n  // Decode token and get user info and exp\n  const decoded = jwt_decode(token);\n  // Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n  // Check for expired token\n  const currentTime = Date.now() / 1000; // to get in milliseconds\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser());\n\n    // Redirect to login\n    window.location.href = \"./login\";\n  }\n}\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Navbar />\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n            <Switch>\n              <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\nexport default App;","const isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit http://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    }\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}